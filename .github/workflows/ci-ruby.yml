# Configuration for Ruby CI
# To force the execution of this workflow, add [run ruby] to your commit message
name: 'CI - Ruby'

on:
  workflow_dispatch:

  schedule:
    - cron: '35 9,21 * * *'

  push:

  pull_request:

jobs:
  check_workflow:
    permissions:
      contents: none
    uses: ./.github/workflows/should-workflow-run.yml
    with:
      bazel-target-prefix: '//rb'

  build-linux:
    if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[run ruby]') == true }}
    needs: check_workflow
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
      - name: Cache Bazel artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/bazel-disk
            ~/.cache/bazel-repo
          key: |
            ${{ runner.os }}-bazel-ruby-build-${{ hashFiles('**/BUILD.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-ruby-build-
      - name: Build Selenium WebDriver
        uses: ./.github/actions/bazel
        with:
          command: build //rb:selenium-webdriver
      - name: Build Selenium DevTools
        uses: ./.github/actions/bazel
        with:
          command: build //rb:selenium-devtools

  browser:
    if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[run ruby]') == true }}
    needs: build-linux
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu ]
        browser: [ firefox, chrome, edge ]
        version: [ stable, beta, latest, latest-beta ]
        remote: [ local, remote ]
        exclude:
          - os: 'ubuntu'
            browser: 'edge'
          - browser: 'firefox'
            version: 'stable'
          - browser: 'firefox'
            version: 'beta'
          - browser: 'chrome'
            version: 'latest'
          - browser: 'chrome'
            version: 'latest-beta'
          - browser: 'edge'
            version: 'latest'
          - browser: 'edge'
            version: 'latest-beta'
          - browser: 'edge'
            version: 'beta'
          - os: 'macos'
            browser: 'firefox'
            version: 'latest-beta'
          - os: 'macos'
            browser: 'firefox'
            remote: 'remote'
          - os: 'macos'
            browser: 'edge'
            remote: 'remote'
          - os: 'macos'
            browser: 'chrome'
            version: 'beta'
          - remote: 'remote'
            version: 'beta'
          - remote: 'remote'
            version: 'latest-beta'
    runs-on: ${{ matrix.os }}-latest
    env:
      DISPLAY: :99
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v2
      - name: Setup Java
        if: ${{ matrix.remote == 'remote' }}
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
      - name: Cache Bazel artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/bazel-disk
            ~/.cache/bazel-repo
          key: ${{ runner.os }}-bazel-ruby-${{ matrix.browser }}-${{ hashFiles('**/BUILD.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-ruby-build-
            ${{ runner.os }}-bazel-ruby-${{ matrix.browser }}-
      - name: Setup Fluxbox
        if: ${{ matrix.os == 'ubuntu' }}
        run: sudo apt-get -y install fluxbox
      - name: Start XVFB
        if: ${{ matrix.os == 'ubuntu' }}
        run: Xvfb :99 &
      - name: Start Fluxbox
        if: ${{ matrix.os == 'ubuntu' }}
        run: fluxbox -display :99 &
      - name: Adjust Screen Resolution (Mac)
        if: ${{ matrix.os == 'macos' }}
        run: |
         system_profiler SPDisplaysDataType | grep Resolution
         "/Library/Application Support/VMware Tools/vmware-resolutionSet" 2560 1440
         system_profiler SPDisplaysDataType | grep Resolution
      - name: Setup ${{ matrix.browser }}
        uses: abhi1693/setup-browser@v0.3.4
        with:
          browser: ${{ matrix.browser }}
          version: ${{ matrix.version }}
      - name: Run ${{ matrix.browser }} tests
        if: ${{ matrix.remote == 'local' }}
        uses: ./.github/actions/bazel
        with:
          command: test --test_output=all --flaky_test_attempts=2 //rb:${{ matrix.browser }}-test
      - name: Run Remote ${{ matrix.browser }} 'tests'
        if: ${{ matrix.remote == 'remote' }}
        uses: ./.github/actions/bazel
        with:
          command: test --test_output=all --flaky_test_attempts=2 //rb:remote-${{ matrix.browser }}-test

  docs:
    if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[run ruby]') == true }}
    needs: check_workflow
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
      - name: Cache Bazel artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/bazel-disk
            ~/.cache/bazel-repo
          key: ${{ runner.os }}-bazel-ruby-docs-${{ hashFiles('**/BUILD.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-ruby-docs-
      - name: Run docs tests
        uses: ./.github/actions/bazel
        with:
          command: run //rb:docs

  lint:
    if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[run ruby]') == true }}
    needs: check_workflow
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
      - name: Cache Bazel artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/bazel-disk
            ~/.cache/bazel-repo
          key: ${{ runner.os }}-bazel-ruby-lint-${{ hashFiles('**/BUILD.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-ruby-lint-
      - name: Run lint tests
        uses: ./.github/actions/bazel
        with:
          command: run //rb:lint

  unit-test:
    if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[run ruby]') == true }}
    needs: check_workflow
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby: [ '2.7', '3.1' ]
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
      - name: Cache Bazel artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/bazel-disk
            ~/.cache/bazel-repo
          key: ${{ runner.os }}-bazel-ruby-unit-test-${{ matrix.ruby }}-${{ hashFiles('**/BUILD.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-ruby-unit-test-${{ matrix.ruby }}-
      - name: Run unit tests
        uses: ./.github/actions/bazel
        with:
          command: test --test_output=all //rb:unit-test
